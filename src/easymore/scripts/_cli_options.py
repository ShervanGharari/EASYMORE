"""
Options to run the CLI interface of the easymore program
"""

import click


cli_options = {
    ('case_name', '--case-name', '-n'): {
        'type': click.STRING,
        'required': False,
        'default': 'easymore_test',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Easymore experiment name',
        'show_choices': False,
    },
    ('source_nc', '--source-nc', '-i'): {
        'type': click.STRING,
        'required': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Path to source netCDF files',
        'show_choices': False,
    },
    ('target_shp', '--shapefile', '-s'): {
        'type': click.Path(exists=True, file_okay=True, dir_okay=False),
        'required': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Path to the ESRI Shapefile',
        'show_choices': False,
    },
    ('target_shp_ID', '--shapefile-id', '-si'): {
        'type': click.STRING,
        'required': False,
        'default': 'ID',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Column name corresponding to the IDs of the ESRI'
        ' Shapefile features',
        'show_choices': False,
    },
    ('target_shp_lat', '--shapefile-lat', '-sl'): {
        'type': click.STRING,
        'required': False,
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Column name corresponding to the latitude values of the'
        ' ESRI Shapefile features',
        'show_choices': False,
    },
    ('target_shp_lon', '--shapefile-lon', '-sn'): {
        'type': click.STRING,
        'required': False,
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Column name corresponding to the longtiude values of the'
        ' ESRI Shapefile features',
        'show_choices': False,
    },
    ('var_names', '--variable', '-v'): {
        'type': click.STRING,
        'required': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable names to be remapped from netCDF files',
        'show_choices': False,
        'multiple': True,
    },
    ('var_lat', '--variable-lat', '-vl'): {
        'type': click.STRING,
        'required': False,
        'default': 'lat',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to latitude values in the'
        ' netCDF files',
        'show_choices': False,
    },
    ('var_lon', '--variable-lon', '-vn'): {
        'type': click.STRING,
        'required': False,
        'default': 'lon',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to longitude values in the'
        ' netCDF files',
        'show_choices': False,
    },
    ('var_time', '--variable-time', '-vt'): {
        'type': click.STRING,
        'required': False,
        'default': 'time',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to time-step values in the'
        ' netCDF file',
        'show_choices': False,
    },
    ('var_station', '--variable-station', '-vs'): {
        'type': click.STRING,
        'required': False,
        'default': '',
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to station names in the'
        ' netCDF files',
        'show_choices': False,
    },
    ('source_shp', '--source-shapefile', '-ss'): {
        'type': click.Path(exists=True, file_okay=True),
        'required': False,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Path to the source ESRI Shapefile (mostly for irregular'
        ' cases)',
        'show_choices': False,
    },
    ('source_shp_lat', '--source-shapefile-lat', '-ssl'): {
        'type': click.STRING,
        'required': False,
        'default': 'lat',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to `latitude` available both'
        ' in the source netCDF file(s) and source ESRI Shapefile',
        'show_choices': False,
    },
    ('source_shp_lon', '--source-shapefile-lon', '-ssn'): {
        'type': click.STRING,
        'required': False,
        'default': 'lon',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable name corresponding to `longitude` available'
        ' both in the source netCDF file(s) and source ESRI Shapefile',
        'show_choices': False,
    },
    ('var_names_remapped', '--remapped-variable', '-rv'): {
        'type': click.STRING,
        'required': False,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Variable names replacing input names read from netCDF'
        ' files',
        'show_choices': False,
        'multiple': True,
    },
    ('remapped_var_id', '--remapped-var-id', '-ri'): {
        'type': click.STRING,
        'required': False,
        'default': 'ID',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Name of the `ID` variable to be used in the remapped'
        ' netCDF files',
        'show_choices': False,
    },
    ('remapped_var_lat', '--remapped-lat', '-rl'): {
        'type': click.STRING,
        'required': False,
        'default': 'latitude',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Name of the `lat` variable to be used in the remapped'
        ' netCDF files',
        'show_choices': False,
    },
    ('remapped_var_lon', '--remapped-lon', '-rn'): {
        'type': click.STRING,
        'required': False,
        'default': 'longitude',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Name of the `lon` variable to be used in the remapped'
        ' netCDF files',
        'show_choices': False,
    },
    ('remapped_dim_id', '--remapped-dim-id', '-rd'): {
        'type': click.STRING,
        'required': False,
        'default': 'ID',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Name of the `ID` dimension to be used in the remapped'
        ' netCDF files',
        'show_choices': False,
    },
    ('remapped_chunk_size', '--chunk', '-u'): {
        'type': click.INT,
        'required': False,
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Chunk size of the generated netCDF file(s)',
        'show_choices': False,
    },
    ('output_dir', '--output-dir', '-o'): {
        'type': click.Path(exists=False, dir_okay=True),
        'required': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Output directory',
        'show_choices': False,
    },
    ('only_create_remap_nc', '--remap-file-only', '-R'): {
        'type': click.BOOL,
        'required': False,
        'default': False,
        'show_default': True,
        'is_flag': True,
        'allow_from_autoenv': False,
        'help': 'Only produce remapping .csv file',
    },
    ('skip_check_all_source_nc', '--skip-checks', '-K'): {
        'type': click.BOOL,
        'required': False,
        'default': False,
        'show_default': True,
        'is_flag': True,
        'allow_from_autoenv': False,
        'help': 'Disable consistency checks over all input netCDF files',
        'show_choices': True,
        'show_default': True,
    },
    ('clip_source_shp', '--clip-shapefile', '-L'): {
        'type': click.BOOL,
        'required': False,
        'default': True,
        'show_default': True,
        'is_flag': True,
        'allow_from_autoenv': False,
        'help': 'Clip source ESRI Shapefile to increase efficiency',
        'show_choices': True,
        'show_default': True,
    },
    ('author_name', '--case-name-author', '-na'): {
        'type': click.STRING,
        'required': False,
        'default': 'Agent',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': False,
        'help': 'Easymore experiment agent',
        'show_choices': False,
    },
    ('temp_dir', '--cache', '-c'): {
        'type': click.STRING,
        'required': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Temporary directory path',
        'show_choices': False,
    },
    ('submit_job', '--submit-job', '-j'): {
        'type': click.BOOL,
        'required': False,
        'is_flag': True,
        'allow_from_autoenv': True,
        'help': 'Submit job to HPC scheduler',
    },
    ('submit_job_conf', '--job-conf', '-jc'): {
        'type': click.STRING,
        'required': False,
        'default': 'default',
        'show_default': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Job submission script file',
        'show_choices': False,
    },
    ('dependency', '--dependency', '-p'): {
        'type': click.STRING,
        'required': False,
        'default': None,
        'multiple': True,
        'is_flag': False,
        'allow_from_autoenv': True,
        'help': 'Make SLURM job submission dependant on successfully'
        ' finishing another on given their submission ID',
        'show_choices': False,
    },
    ('parallel', '--parallel', '-l'): {
        'type': click.BOOL,
        'required': False,
        'is_flag': True,
        'allow_from_autoenv': True,
        'help': 'Parallelize process',
        'show_choices': False,
    },
}
